rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      // Allow reading the user's doc and deleting/creating/updating it
      allow read, create, update, delete: if isOwner(userId);

      // babies
      match /babies/{babyId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }

      // daily plans
      match /dailyPlans/{dateId} {
        // READ should not validate request.resource
        allow read: if isOwner(userId);
        // WRITE may validate the incoming data
        allow write: if isOwner(userId)
          && (request.resource.data.tasks is list);
      }

      // appointments
      match /appointments/{apptId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId)
          && (request.resource.data.at is timestamp);
      }

      // tips
      match /tips/{tipId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId)
          && (request.resource.data.trimester in [1,2,3]);
      }
    }
  }
}
